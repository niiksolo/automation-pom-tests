name: QA Tests Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: qa_tests_image
  IMAGE_TAG: latest
  REPORT_DIR: allure-report
  SITE_LOGIN: ${{ secrets.TEST_LOGIN }}
  SITE_PASSWORD: ${{ secrets.TEST_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG

  smoke-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Pull image and run Smoke Tests
        run: |
          docker pull ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -v $PWD/allure-report:/app/allure-report \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/smoke --alluredir=allure-report --tb=short"

  integration-tests:
    runs-on: ubuntu-latest
    needs: smoke-tests
    steps:
      - uses: actions/checkout@v3
      - name: Pull image and run Integration Tests
        run: |
          docker pull ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -v $PWD/allure-report:/app/allure-report \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/integration --alluredir=allure-report --tb=short"

  regression-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v3
      - name: Pull image and run Regression Tests
        run: |
          docker pull ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -v $PWD/allure-report:/app/allure-report \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/regression --alluredir=allure-report --tb=short"

  allure-report:
    runs-on: ubuntu-latest
    needs: [smoke-tests, integration-tests, regression-tests]
    steps:
      - uses: actions/checkout@v3
      - name: Generate Allure HTML report
        run: |
          docker run --rm \
            -v $PWD/allure-report:/app/allure-report \
            -v $PWD/allure-report/allure-html:/app/allure-html \
            ghcr.io/allure/allure:2.22.1 generate /app/allure-report -o /app/allure-html
      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report/allure-html