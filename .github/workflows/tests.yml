name: QA Tests Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: qa_tests_image
  IMAGE_TAG: latest
  SITE_LOGIN: ${{ secrets.TEST_LOGIN }}
  SITE_PASSWORD: ${{ secrets.TEST_PASSWORD }}
  CI: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG
          docker push ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG

  smoke-tests:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3
      - name: Run Smoke Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/smoke --alluredir=reports/allure --tb=short"

  integration-tests:
    runs-on: ubuntu-latest
    needs: smoke-tests
    steps:
      - uses: actions/checkout@v3
      - name: Run Integration Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/integration --alluredir=reports/allure --tb=short"

  regression-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v3
      - name: Run Regression Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/regression --alluredir=reports/allure --tb=short"

  generate-allure-report:
    runs-on: ubuntu-latest
    needs: [smoke-tests, integration-tests, regression-tests]
    steps:
      - uses: actions/checkout@v3

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: reports/allure

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz

      - name: Generate Allure Report
        run: |
          ./allure-2.27.0/bin/allure generate reports/allure --clean -o public

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: public

  deploy-allure-report:
    runs-on: ubuntu-latest
    needs: generate-allure-report
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4