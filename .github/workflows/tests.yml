name: QA Tests Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: qa_tests_image
  IMAGE_TAG: latest
  SITE_LOGIN: ${{ secrets.TEST_LOGIN }}
  SITE_PASSWORD: ${{ secrets.TEST_PASSWORD }}
  CI: true

jobs:

  smoke-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run Smoke Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/smoke --alluredir=reports/allure --tb=short"


  integration-tests:
    runs-on: ubuntu-latest
    needs: smoke-tests
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run Integration Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/integration --alluredir=reports/allure --tb=short"


  regression-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run Regression Tests
        run: |
          docker run --rm \
            -e SITE_LOGIN=${{ env.SITE_LOGIN }} \
            -e SITE_PASSWORD=${{ env.SITE_PASSWORD }} \
            -e CI=${{ env.CI }} \
            -v ${{ github.workspace }}/reports:/app/reports \
            ghcr.io/${{ github.repository }}/$IMAGE_NAME:$IMAGE_TAG \
            sh -c "pytest tests/regression --alluredir=reports/allure --tb=short"


  allure-report:
    runs-on: ubuntu-latest
    needs: [smoke-tests, integration-tests, regression-tests]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Allure
        run: |
          sudo apt update
          sudo apt install -y unzip curl
          ALLURE_VERSION=2.27.0
          curl -Lo allure.zip https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
          unzip allure.zip -d $HOME/allure
          echo "$HOME/allure/allure-${ALLURE_VERSION}/bin" >> $GITHUB_PATH

      - name: Generate Allure HTML Report
        run: |
          rm -rf reports/allure-report
          mkdir -p reports/allure-report
          allure generate reports/allure -o reports/allure-report --clean

      - name: Clean Allure report symlinks
        run: |
          find reports/allure-report -type l -exec rm {} +

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: reports/allure-report